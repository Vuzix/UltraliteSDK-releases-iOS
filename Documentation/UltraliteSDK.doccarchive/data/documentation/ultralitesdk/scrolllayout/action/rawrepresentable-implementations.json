{"hierarchy":{"paths":[["doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK","doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action"]]},"variants":[{"paths":["\/documentation\/ultralitesdk\/scrolllayout\/action\/rawrepresentable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"collectionGroup","title":"RawRepresentable Implementations","modules":[{"name":"UltraliteSDK"}],"roleHeading":"API Collection"},"sections":[],"topicSections":[{"identifiers":["doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/hashValue"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/hash(into:)"],"anchor":"Instance-Methods"}],"identifier":{"url":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/RawRepresentable-Implementations","interfaceLanguage":"swift"},"references":{"doc://com.vuzix.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout":{"identifier":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","navigatorTitle":[{"text":"ScrollLayout","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/ultralitesdk\/scrolllayout","title":"ScrollLayout","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScrollLayout"}],"role":"symbol","abstract":[{"text":"When Ultralite.requestControl with a .scroll layout type .. this is the class you interate with to draw scrolling text to the screen.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Once the layout is .scrolled you must send one configure message to tell the layout how to setup.  It will setup the slice height and how many slices are visible."},{"text":" ","type":"text"},{"text":"There are two supported modes: autoScroll on\/off","type":"text"},{"type":"text","text":" "},{"text":"When autoScroll is true, the slices are automatically scrolled.  Subscribe to the delgate and listen for the scrolled callback, when you get it send another slice of text","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When autoScroll is false, you can drive the slices and how they look on the screen.  You can send all the slices at once or send one at a time and animate it onto the screen at the current time."}]},"doc://com.vuzix.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action/hashValue":{"role":"symbol","title":"hashValue","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"type":"topic","kind":"symbol","identifier":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/hashValue","url":"\/documentation\/ultralitesdk\/scrolllayout\/action\/hashvalue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"abstract":[]},"doc://com.vuzix.UltraliteSDK/documentation/UltraliteSDK":{"kind":"symbol","identifier":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK","title":"UltraliteSDK","abstract":[{"text":"Use this SDK to easily send text and images to your Vuxix smart glasses.","type":"text"}],"type":"topic","role":"collection","url":"\/documentation\/ultralitesdk"},"doc://com.vuzix.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action/hash(into:)":{"role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","url":"\/documentation\/ultralitesdk\/scrolllayout\/action\/hash(into:)","identifier":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/hash(into:)","title":"hash(into:)","kind":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}]},"doc://com.vuzix.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action":{"role":"symbol","title":"ScrollLayout.Action","navigatorTitle":[{"text":"Action","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action","url":"\/documentation\/ultralitesdk\/scrolllayout\/action","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"}],"abstract":[{"type":"text","text":"Actions that can be used on a .scroll layout"}]}}}