{"variants":[{"paths":["\/documentation\/ultralitesdk\/scrolllayout\/action\/init(rawvalue:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/init(rawValue:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK","doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"init","modules":[{"name":"UltraliteSDK"}],"title":"init(rawValue:)","role":"symbol","roleHeading":"Initializer","externalID":"s:12UltraliteSDK12ScrollLayoutC6ActionO8rawValueAESgSi_tcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["watchOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"}],"kind":"symbol","abstract":[{"text":"Inherited from ","type":"text"},{"code":"RawRepresentable.init(rawValue:)","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://com.vuzix.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action/init(rawValue:)":{"role":"symbol","title":"init(rawValue:)","type":"topic","identifier":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/init(rawValue:)","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/ultralitesdk\/scrolllayout\/action\/init(rawvalue:)"},"doc://com.vuzix.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action":{"role":"symbol","title":"ScrollLayout.Action","navigatorTitle":[{"text":"Action","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action","url":"\/documentation\/ultralitesdk\/scrolllayout\/action","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"}],"abstract":[{"type":"text","text":"Actions that can be used on a .scroll layout"}]},"doc://com.vuzix.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout":{"identifier":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","navigatorTitle":[{"text":"ScrollLayout","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/ultralitesdk\/scrolllayout","title":"ScrollLayout","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScrollLayout"}],"role":"symbol","abstract":[{"text":"When Ultralite.requestControl with a .scroll layout type .. this is the class you interate with to draw scrolling text to the screen.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Once the layout is .scrolled you must send one configure message to tell the layout how to setup.  It will setup the slice height and how many slices are visible."},{"text":" ","type":"text"},{"text":"There are two supported modes: autoScroll on\/off","type":"text"},{"type":"text","text":" "},{"text":"When autoScroll is true, the slices are automatically scrolled.  Subscribe to the delgate and listen for the scrolled callback, when you get it send another slice of text","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When autoScroll is false, you can drive the slices and how they look on the screen.  You can send all the slices at once or send one at a time and animate it onto the screen at the current time."}]},"doc://com.vuzix.UltraliteSDK/documentation/UltraliteSDK":{"kind":"symbol","identifier":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK","title":"UltraliteSDK","abstract":[{"text":"Use this SDK to easily send text and images to your Vuxix smart glasses.","type":"text"}],"type":"topic","role":"collection","url":"\/documentation\/ultralitesdk"}}}