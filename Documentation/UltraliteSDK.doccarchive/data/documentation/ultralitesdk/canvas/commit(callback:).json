{"abstract":[{"text":"Commits any canvas changes to screen","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK","doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/Canvas"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/Canvas\/commit(callback:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/ultralitesdk\/canvas\/commit(callback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"commit","kind":"identifier"},{"kind":"text","text":"("},{"text":"callback","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")? = nil)","kind":"text"}],"platforms":["watchOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"callback","content":[{"type":"paragraph","inlineContent":[{"text":"Optional method that will be called when this commit has finished loading on the glasses.","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"All canvas operations need to be committed before they will be reflected on the canvas. This","type":"text"},{"type":"text","text":" "},{"text":"allows you to stage an entire screen with changes and display them all at once. This is done by","type":"text"},{"text":" ","type":"text"},{"text":"calling commit().  Please note that uncommitted changes may be shown early in some situations,","type":"text"},{"text":" ","type":"text"},{"text":"so this should be called immediately after the last canvas element is sent to ensure predictable","type":"text"},{"type":"text","text":" "},{"text":"results.","type":"text"}]}]}],"metadata":{"symbolKind":"method","externalID":"s:12UltraliteSDK6CanvasC6commit8callbackyyycSg_tF","role":"symbol","title":"commit(callback:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"commit","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"callback"},{"text":": (() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")?)"}],"modules":[{"name":"UltraliteSDK"}]},"references":{"doc://com.vuzix.UltraliteSDK/documentation/UltraliteSDK/Canvas":{"kind":"symbol","type":"topic","url":"\/documentation\/ultralitesdk\/canvas","identifier":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/Canvas","role":"symbol","title":"Canvas","abstract":[{"type":"text","text":"Canvas is used to perform direct drawing operations to the Ultralite display. Before this class"},{"type":"text","text":" "},{"text":"can be used, the Ultralite layout should be set to CANVAS. Otherwise the methods in this class","type":"text"},{"type":"text","text":" "},{"text":"wonâ€™t do anything.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Canvas","kind":"identifier"}],"navigatorTitle":[{"text":"Canvas","kind":"identifier"}]},"doc://com.vuzix.UltraliteSDK/documentation/UltraliteSDK":{"kind":"symbol","identifier":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK","title":"UltraliteSDK","abstract":[{"text":"Use this SDK to easily send text and images to your Vuxix smart glasses.","type":"text"}],"type":"topic","role":"collection","url":"\/documentation\/ultralitesdk"},"doc://com.vuzix.UltraliteSDK/documentation/UltraliteSDK/Canvas/commit(callback:)":{"abstract":[{"text":"Commits any canvas changes to screen","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.vuzix.UltraliteSDK\/documentation\/UltraliteSDK\/Canvas\/commit(callback:)","role":"symbol","title":"commit(callback:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"commit"},{"text":"(","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": (() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")?)"}],"type":"topic","url":"\/documentation\/ultralitesdk\/canvas\/commit(callback:)"}}}