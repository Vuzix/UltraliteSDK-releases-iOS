{"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","interfaceLanguage":"swift"},"sections":[],"metadata":{"role":"collection","externalID":"UltraliteSDK","roleHeading":"Framework","modules":[{"name":"UltraliteSDK"}],"title":"UltraliteSDK","symbolKind":"module"},"hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Use this SDK to easily send text and images to your Vuxix smart glasses."}],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Bindable","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/BondListener","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Canvas","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Ultralite","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltraliteBaseViewController","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltraliteManager","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltralitePickerController"]},{"title":"Protocols","identifiers":["doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/AutoScrollerDelegate","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayoutDelegate"]},{"identifiers":["doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/CoreGraphics","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/CoreText","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Foundation","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UIKit"],"title":"Extended Modules"}],"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"SDK makes it easy to find, connect and communicate with your ‘Ultralite’ line of Vuzix glasses.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ble Scan and connect\/link"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Draw small images and send text to the screen easily."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ultralitesdk"]}],"references":{"doc://UltraliteSDK/documentation/UltraliteSDK/BondListener":{"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/BondListener","url":"\/documentation\/ultralitesdk\/bondlistener","title":"BondListener","abstract":[{"type":"text","text":"BondListener is nothing more than a strongly typed callback for the Bindable class."}],"role":"symbol","navigatorTitle":[{"text":"BondListener","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BondListener"}],"kind":"symbol","type":"topic"},"doc://UltraliteSDK/documentation/UltraliteSDK/Ultralite":{"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Use this object to communicate with the glasses.  Handles all the communication to the BLE stack. Does all the protocol and encypting and decrypting of payloads."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Ultralite","kind":"identifier"}],"title":"Ultralite","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Ultralite","navigatorTitle":[{"text":"Ultralite","kind":"identifier"}],"url":"\/documentation\/ultralitesdk\/ultralite"},"doc://UltraliteSDK/documentation/UltraliteSDK/CoreText":{"role":"collection","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/CoreText","type":"topic","kind":"symbol","title":"CoreText","abstract":[],"url":"\/documentation\/ultralitesdk\/coretext"},"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayoutDelegate":{"url":"\/documentation\/ultralitesdk\/scrolllayoutdelegate","abstract":[{"text":"Delegate for the ScrollLayout class","type":"text"},{"type":"text","text":" "},{"text":"Receives a ","type":"text"},{"type":"codeVoice","code":"scrolled"},{"text":" event when Ultalite device is ready for the next slice.  Use when ","type":"text"},{"code":"autoscroll","type":"codeVoice"},{"type":"text","text":" is true."}],"title":"ScrollLayoutDelegate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ScrollLayoutDelegate"}],"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayoutDelegate","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ScrollLayoutDelegate"}]},"doc://UltraliteSDK/documentation/UltraliteSDK":{"type":"topic","title":"UltraliteSDK","kind":"symbol","abstract":[{"type":"text","text":"Use this SDK to easily send text and images to your Vuxix smart glasses."}],"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","url":"\/documentation\/ultralitesdk","role":"collection"},"doc://UltraliteSDK/documentation/UltraliteSDK/UltralitePickerController":{"abstract":[{"type":"text","text":"Convience UIViewController that can easily be shown to user to have them select a pair of glasses to communicate with."}],"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltralitePickerController","url":"\/documentation\/ultralitesdk\/ultralitepickercontroller","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UltralitePickerController"}],"role":"symbol","title":"UltralitePickerController","kind":"symbol","navigatorTitle":[{"text":"UltralitePickerController","kind":"identifier"}],"type":"topic"},"doc://UltraliteSDK/documentation/UltraliteSDK/UIKit":{"url":"\/documentation\/ultralitesdk\/uikit","kind":"symbol","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UIKit","role":"collection","abstract":[],"type":"topic","title":"UIKit"},"doc://UltraliteSDK/documentation/UltraliteSDK/AutoScrollerDelegate":{"type":"topic","url":"\/documentation\/ultralitesdk\/autoscrollerdelegate","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/AutoScrollerDelegate","kind":"symbol","title":"AutoScrollerDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AutoScrollerDelegate","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AutoScrollerDelegate"}],"role":"symbol","abstract":[{"text":"AutoScroll class Delegate","type":"text"}]},"doc://UltraliteSDK/documentation/UltraliteSDK/Foundation":{"title":"Foundation","kind":"symbol","abstract":[],"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Foundation","url":"\/documentation\/ultralitesdk\/foundation","type":"topic","role":"collection"},"doc://UltraliteSDK/documentation/UltraliteSDK/UltraliteManager":{"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltraliteManager","title":"UltraliteManager","type":"topic","url":"\/documentation\/ultralitesdk\/ultralitemanager","navigatorTitle":[{"kind":"identifier","text":"UltraliteManager"}],"abstract":[{"type":"text","text":"Manager for connected Ultralite."}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UltraliteManager"}],"kind":"symbol"},"doc://UltraliteSDK/documentation/UltraliteSDK/UltraliteBaseViewController":{"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A convience base class that contains easily override points for starting control of ultralite, stop control, tap handler, on disconnect, on App leave, and showing the picker dialog."},{"type":"text","text":" "},{"text":"Just extend this and code away.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UltraliteBaseViewController"}],"title":"UltraliteBaseViewController","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltraliteBaseViewController","navigatorTitle":[{"kind":"identifier","text":"UltraliteBaseViewController"}],"url":"\/documentation\/ultralitesdk\/ultralitebaseviewcontroller"},"doc://UltraliteSDK/documentation/UltraliteSDK/Canvas":{"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Canvas","navigatorTitle":[{"text":"Canvas","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/ultralitesdk\/canvas","title":"Canvas","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Canvas","kind":"identifier"}],"abstract":[{"text":"Canvas is used to perform direct drawing operations to the Ultralite display. Before this class","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"can be used, the Ultralite layout should be set to CANVAS. Otherwise the methods in this class"},{"type":"text","text":" "},{"text":"won’t do anything.","type":"text"}]},"doc://UltraliteSDK/documentation/UltraliteSDK/CoreGraphics":{"url":"\/documentation\/ultralitesdk\/coregraphics","title":"CoreGraphics","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/CoreGraphics","role":"collection"},"doc://UltraliteSDK/documentation/UltraliteSDK/Bindable":{"kind":"symbol","title":"Bindable","navigatorTitle":[{"text":"Bindable","kind":"identifier"}],"url":"\/documentation\/ultralitesdk\/bindable","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Bindable","kind":"identifier"}],"abstract":[{"text":"A strongly typed value change \/ bind to a listener class.","type":"text"}],"type":"topic","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Bindable"},"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ScrollLayout","kind":"identifier"}],"url":"\/documentation\/ultralitesdk\/scrolllayout","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","abstract":[{"text":"When Ultralite.requestControl with a .scroll layout type .. this is the class you interate with to draw scrolling text to the screen.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Once the layout is .scrolled you must send one configure message to tell the layout how to setup.  It will setup the slice height and how many slices are visible."},{"type":"text","text":" "},{"type":"text","text":"There are two supported modes: autoScroll on\/off"},{"text":" ","type":"text"},{"type":"text","text":"When autoScroll is true, the slices are automatically scrolled.  Subscribe to the delgate and listen for the scrolled callback, when you get it send another slice of text"},{"type":"text","text":" "},{"text":"When autoScroll is false, you can drive the slices and how they look on the screen.  You can send all the slices at once or send one at a time and animate it onto the screen at the current time.","type":"text"}],"role":"symbol","title":"ScrollLayout","kind":"symbol","navigatorTitle":[{"text":"ScrollLayout","kind":"identifier"}],"type":"topic"}}}