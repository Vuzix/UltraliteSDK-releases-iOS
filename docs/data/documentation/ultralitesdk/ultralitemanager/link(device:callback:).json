{"identifier":{"url":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltraliteManager\/link(device:callback:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltraliteManager"]]},"abstract":[{"type":"text","text":"Links the provided Bluetooth device as an Ultralite device. This may result in pairing"},{"type":"text","text":" "},{"type":"text","text":"prompts be displayed to the user. Because of this, the result of the linking may not be known"},{"text":" ","type":"text"},{"type":"text","text":"immediately. The linking result will be delivered via the provided callback."}],"variants":[{"paths":["\/documentation\/ultralitesdk\/ultralitemanager\/link(device:callback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"link(device:callback:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"link"},{"text":"(","kind":"text"},{"text":"device","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral","text":"CBPeripheral"},{"kind":"text","text":", "},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": (("},{"preciseIdentifier":"c:@M@UltraliteSDK@objc(cs)Ultralite","text":"Ultralite","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"))"}],"modules":[{"name":"UltraliteSDK"}],"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","externalID":"s:12UltraliteSDK0A7ManagerC4link6device8callbackySo12CBPeripheralC_yAA0A0CSgctF"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"link","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"device"},{"text":": ","kind":"text"},{"text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" (("},{"text":"Ultralite","kind":"typeIdentifier","preciseIdentifier":"c:@M@UltraliteSDK@objc(cs)Ultralite","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Ultralite"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":"))","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"device","content":[{"inlineContent":[{"type":"text","text":"the CBPeripheral to link"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"the callback to report on link status","type":"text"}]}],"name":"callback"}]},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"If this method is called while a device is already linked and the link to the new device","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is successful, it will result in the previously linked device being unlinked."}]}],"kind":"content"}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://UltraliteSDK/documentation/UltraliteSDK/UltraliteManager/link(device:callback:)":{"type":"topic","title":"link(device:callback:)","abstract":[{"type":"text","text":"Links the provided Bluetooth device as an Ultralite device. This may result in pairing"},{"text":" ","type":"text"},{"type":"text","text":"prompts be displayed to the user. Because of this, the result of the linking may not be known"},{"type":"text","text":" "},{"type":"text","text":"immediately. The linking result will be delivered via the provided callback."}],"url":"\/documentation\/ultralitesdk\/ultralitemanager\/link(device:callback:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"link"},{"text":"(","kind":"text"},{"text":"device","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)CBPeripheral","text":"CBPeripheral","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Ultralite","kind":"typeIdentifier","preciseIdentifier":"c:@M@UltraliteSDK@objc(cs)Ultralite"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":"))","kind":"text"}],"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltraliteManager\/link(device:callback:)","role":"symbol"},"doc://UltraliteSDK/documentation/UltraliteSDK/UltraliteManager":{"url":"\/documentation\/ultralitesdk\/ultralitemanager","type":"topic","title":"UltraliteManager","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltraliteManager","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Manager for connected Ultralite."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"UltraliteManager"}],"navigatorTitle":[{"text":"UltraliteManager","kind":"identifier"}]},"doc://UltraliteSDK/documentation/UltraliteSDK":{"title":"UltraliteSDK","kind":"symbol","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","url":"\/documentation\/ultralitesdk","role":"collection","abstract":[{"type":"text","text":"Use this SDK to easily send text and images to your Vuxix smart glasses."}],"type":"topic"},"doc://UltraliteSDK/documentation/UltraliteSDK/Ultralite":{"navigatorTitle":[{"text":"Ultralite","kind":"identifier"}],"type":"topic","kind":"symbol","title":"Ultralite","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Ultralite","url":"\/documentation\/ultralitesdk\/ultralite","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Ultralite","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Use this object to communicate with the glasses.  Handles all the communication to the BLE stack. Does all the protocol and encypting and decrypting of payloads.","type":"text"}]}}}