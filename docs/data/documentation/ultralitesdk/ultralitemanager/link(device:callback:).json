{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"link","kind":"identifier"},{"kind":"text","text":"("},{"text":"device","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral","text":"CBPeripheral"},{"text":", ","kind":"text"},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" (("},{"text":"Ultralite","kind":"typeIdentifier","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Ultralite","preciseIdentifier":"c:@M@UltraliteSDK@objc(cs)Ultralite"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":"))","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"device","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the CBPeripheral to link"}]}]},{"content":[{"inlineContent":[{"text":"the callback to report on link status","type":"text"}],"type":"paragraph"}],"name":"callback"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If this method is called while a device is already linked and the link to the new device"},{"text":" ","type":"text"},{"type":"text","text":"is successful, it will result in the previously linked device being unlinked."}]}]}],"hierarchy":{"paths":[["doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltraliteManager"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"title":"link(device:callback:)","modules":[{"name":"UltraliteSDK"}],"externalID":"s:12UltraliteSDK0A7ManagerC4link6device8callbackySo12CBPeripheralC_yAA0A0CSgctF","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"link"},{"text":"(","kind":"text"},{"text":"device","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CBPeripheral","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"callback"},{"text":": ((","kind":"text"},{"text":"Ultralite","kind":"typeIdentifier","preciseIdentifier":"c:@M@UltraliteSDK@objc(cs)Ultralite"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":"))","kind":"text"}],"symbolKind":"method","role":"symbol"},"variants":[{"paths":["\/documentation\/ultralitesdk\/ultralitemanager\/link(device:callback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"text":"Links the provided Bluetooth device as an Ultralite device. This may result in pairing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"prompts be displayed to the user. Because of this, the result of the linking may not be known"},{"type":"text","text":" "},{"text":"immediately. The linking result will be delivered via the provided callback.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltraliteManager\/link(device:callback:)"},"references":{"doc://UltraliteSDK/documentation/UltraliteSDK/UltraliteManager/link(device:callback:)":{"type":"topic","kind":"symbol","title":"link(device:callback:)","abstract":[{"text":"Links the provided Bluetooth device as an Ultralite device. This may result in pairing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"prompts be displayed to the user. Because of this, the result of the linking may not be known"},{"type":"text","text":" "},{"text":"immediately. The linking result will be delivered via the provided callback.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"link","kind":"identifier"},{"kind":"text","text":"("},{"text":"device","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBPeripheral","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":", "},{"text":"callback","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@UltraliteSDK@objc(cs)Ultralite","text":"Ultralite"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":"))"}],"role":"symbol","url":"\/documentation\/ultralitesdk\/ultralitemanager\/link(device:callback:)","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltraliteManager\/link(device:callback:)"},"doc://UltraliteSDK/documentation/UltraliteSDK":{"url":"\/documentation\/ultralitesdk","type":"topic","kind":"symbol","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","title":"UltraliteSDK","abstract":[{"type":"text","text":"Use this SDK to easily send text and images to your Vuxix smart glasses."}],"role":"collection"},"doc://UltraliteSDK/documentation/UltraliteSDK/UltraliteManager":{"role":"symbol","url":"\/documentation\/ultralitesdk\/ultralitemanager","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/UltraliteManager","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"UltraliteManager","kind":"identifier"}],"abstract":[{"text":"Manager for connected Ultralite.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UltraliteManager"}],"title":"UltraliteManager"},"doc://UltraliteSDK/documentation/UltraliteSDK/Ultralite":{"url":"\/documentation\/ultralitesdk\/ultralite","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Ultralite","kind":"identifier"}],"kind":"symbol","type":"topic","title":"Ultralite","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Ultralite","navigatorTitle":[{"kind":"identifier","text":"Ultralite"}],"abstract":[{"type":"text","text":"Use this object to communicate with the glasses.  Handles all the communication to the BLE stack. Does all the protocol and encypting and decrypting of payloads."}],"role":"symbol"}}}