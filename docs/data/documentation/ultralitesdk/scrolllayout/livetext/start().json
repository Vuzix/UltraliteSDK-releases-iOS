{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ultralitesdk\/scrolllayout\/livetext\/start()"]}],"identifier":{"url":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText\/start()","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"text":"()","kind":"text"}],"title":"start()","externalID":"s:12UltraliteSDK12ScrollLayoutC8LiveTextC5startyyF","modules":[{"name":"UltraliteSDK"}],"roleHeading":"Instance Method","role":"symbol"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","abstract":[{"text":"Starts the LiveText listening for text changes on the text property.","type":"text"},{"text":" ","type":"text"},{"text":"The caller must ","type":"text"},{"code":"requestControl()","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"setLayout(Layout.SCROLL,...)"},{"type":"text","text":" prior to calling this."}],"hierarchy":{"paths":[["doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK","doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["iOS"]}]}],"references":{"doc://ultralitesdk.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout":{"identifier":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScrollLayout"}],"navigatorTitle":[{"kind":"identifier","text":"ScrollLayout"}],"title":"ScrollLayout","abstract":[{"type":"text","text":"When Ultralite.requestControl with a .scroll layout type .. this is the class you interate with to draw scrolling text to the screen."},{"type":"text","text":" "},{"text":"Once the layout is .scrolled you must send one configure message to tell the layout how to setup.  It will setup the slice height and how many slices are visible.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"There are two supported modes: autoScroll on\/off"},{"type":"text","text":" "},{"type":"text","text":"When autoScroll is true, the slices are automatically scrolled.  Subscribe to the delgate and listen for the scrolled callback, when you get it send another slice of text"},{"text":" ","type":"text"},{"text":"When autoScroll is false, you can drive the slices and how they look on the screen.  You can send all the slices at once or send one at a time and animate it onto the screen at the current time.","type":"text"}],"kind":"symbol","url":"\/documentation\/ultralitesdk\/scrolllayout","role":"symbol"},"doc://ultralitesdk.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/LiveText/start()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","kind":"symbol","title":"start()","identifier":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText\/start()","abstract":[{"type":"text","text":"Starts the LiveText listening for text changes on the text property."},{"type":"text","text":" "},{"type":"text","text":"The caller must "},{"code":"requestControl()","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"setLayout(Layout.SCROLL,...)","type":"codeVoice"},{"type":"text","text":" prior to calling this."}],"url":"\/documentation\/ultralitesdk\/scrolllayout\/livetext\/start()","role":"symbol"},"doc://ultralitesdk.UltraliteSDK/documentation/UltraliteSDK":{"title":"UltraliteSDK","url":"\/documentation\/ultralitesdk","identifier":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK","abstract":[{"type":"text","text":"Use this SDK to easily send text and images to your Vuxix smart glasses."}],"type":"topic","kind":"symbol","role":"collection"},"doc://ultralitesdk.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/LiveText":{"url":"\/documentation\/ultralitesdk\/scrolllayout\/livetext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LiveText"}],"identifier":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText","type":"topic","role":"symbol","abstract":[{"type":"text","text":"LiveText is a utility class to send small blocks of rapidly updating text to the glasses to be displayed at the bottom of the field of view."},{"type":"text","text":" "},{"text":"This creates an effect similar to closed captioning on a televisiion.","type":"text"},{"text":" ","type":"text"},{"text":"This class efficiently updates the current line of text on the screen by adding new words to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"end, and then scrolls the completed lines upwards to make room for new content below."}],"kind":"symbol","title":"ScrollLayout.LiveText","navigatorTitle":[{"text":"LiveText","kind":"identifier"}]}}}