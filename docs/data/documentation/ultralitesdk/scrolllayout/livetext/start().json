{"metadata":{"externalID":"s:12UltraliteSDK12ScrollLayoutC8LiveTextC5startyyF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"text":"()","kind":"text"}],"title":"start()","symbolKind":"method","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"UltraliteSDK"}]},"identifier":{"url":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText\/start()","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]}],"abstract":[{"type":"text","text":"Starts the LiveText listening for text changes on the text property."},{"text":" ","type":"text"},{"type":"text","text":"The caller must "},{"code":"requestControl()","type":"codeVoice"},{"type":"text","text":" and "},{"code":"setLayout(Layout.SCROLL,...)","type":"codeVoice"},{"text":" prior to calling this.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ultralitesdk\/scrolllayout\/livetext\/start()"]}],"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK","doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText"]]},"references":{"doc://ultralitesdk.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/LiveText/start()":{"url":"\/documentation\/ultralitesdk\/scrolllayout\/livetext\/start()","title":"start()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"()"}],"role":"symbol","abstract":[{"type":"text","text":"Starts the LiveText listening for text changes on the text property."},{"text":" ","type":"text"},{"text":"The caller must ","type":"text"},{"code":"requestControl()","type":"codeVoice"},{"type":"text","text":" and "},{"code":"setLayout(Layout.SCROLL,...)","type":"codeVoice"},{"type":"text","text":" prior to calling this."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText\/start()"},"doc://ultralitesdk.UltraliteSDK/documentation/UltraliteSDK":{"abstract":[{"type":"text","text":"Use this SDK to easily send text and images to your Vuxix smart glasses."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK","url":"\/documentation\/ultralitesdk","title":"UltraliteSDK","type":"topic"},"doc://ultralitesdk.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout":{"url":"\/documentation\/ultralitesdk\/scrolllayout","navigatorTitle":[{"kind":"identifier","text":"ScrollLayout"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ScrollLayout","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","kind":"symbol","title":"ScrollLayout","abstract":[{"text":"When Ultralite.requestControl with a .scroll layout type .. this is the class you interate with to draw scrolling text to the screen.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Once the layout is .scrolled you must send one configure message to tell the layout how to setup.  It will setup the slice height and how many slices are visible."},{"type":"text","text":" "},{"text":"There are two supported modes: autoScroll on\/off","type":"text"},{"type":"text","text":" "},{"text":"When autoScroll is true, the slices are automatically scrolled.  Subscribe to the delgate and listen for the scrolled callback, when you get it send another slice of text","type":"text"},{"type":"text","text":" "},{"type":"text","text":"When autoScroll is false, you can drive the slices and how they look on the screen.  You can send all the slices at once or send one at a time and animate it onto the screen at the current time."}],"role":"symbol"},"doc://ultralitesdk.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/LiveText":{"title":"ScrollLayout.LiveText","role":"symbol","url":"\/documentation\/ultralitesdk\/scrolllayout\/livetext","kind":"symbol","navigatorTitle":[{"text":"LiveText","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"LiveText","kind":"identifier"}],"abstract":[{"type":"text","text":"LiveText is a utility class to send small blocks of rapidly updating text to the glasses to be displayed at the bottom of the field of view."},{"type":"text","text":" "},{"type":"text","text":"This creates an effect similar to closed captioning on a televisiion."},{"text":" ","type":"text"},{"type":"text","text":"This class efficiently updates the current line of text on the screen by adding new words to the"},{"type":"text","text":" "},{"text":"end, and then scrolls the completed lines upwards to make room for new content below.","type":"text"}]}}}