{"hierarchy":{"paths":[["doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK","doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText"]]},"abstract":[{"text":"Starts the LiveText listening for text changes on the text property.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The caller must "},{"type":"codeVoice","code":"requestControl()"},{"type":"text","text":" and "},{"type":"codeVoice","code":"setLayout(Layout.SCROLL,...)"},{"type":"text","text":" prior to calling this."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ultralitesdk\/scrolllayout\/livetext\/start()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText\/start()"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"kind":"text","text":"()"}],"platforms":["iOS"]}]}],"metadata":{"externalID":"s:12UltraliteSDK12ScrollLayoutC8LiveTextC5startyyF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","roleHeading":"Instance Method","title":"start()","symbolKind":"method","modules":[{"name":"UltraliteSDK"}]},"references":{"doc://ultralitesdk.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/LiveText/start()":{"url":"\/documentation\/ultralitesdk\/scrolllayout\/livetext\/start()","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Starts the LiveText listening for text changes on the text property."},{"text":" ","type":"text"},{"type":"text","text":"The caller must "},{"type":"codeVoice","code":"requestControl()"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"setLayout(Layout.SCROLL,...)"},{"type":"text","text":" prior to calling this."}],"identifier":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText\/start()","title":"start()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol"},"doc://ultralitesdk.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout":{"type":"topic","navigatorTitle":[{"text":"ScrollLayout","kind":"identifier"}],"role":"symbol","title":"ScrollLayout","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ScrollLayout","kind":"identifier"}],"url":"\/documentation\/ultralitesdk\/scrolllayout","kind":"symbol","abstract":[{"type":"text","text":"When Ultralite.requestControl with a .scroll layout type .. this is the class you interate with to draw scrolling text to the screen."},{"text":" ","type":"text"},{"type":"text","text":"Once the layout is .scrolled you must send one configure message to tell the layout how to setup.  It will setup the slice height and how many slices are visible."},{"text":" ","type":"text"},{"type":"text","text":"There are two supported modes: autoScroll on\/off"},{"type":"text","text":" "},{"text":"When autoScroll is true, the slices are automatically scrolled.  Subscribe to the delgate and listen for the scrolled callback, when you get it send another slice of text","type":"text"},{"type":"text","text":" "},{"text":"When autoScroll is false, you can drive the slices and how they look on the screen.  You can send all the slices at once or send one at a time and animate it onto the screen at the current time.","type":"text"}],"identifier":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout"},"doc://ultralitesdk.UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/LiveText":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LiveText","kind":"identifier"}],"role":"symbol","url":"\/documentation\/ultralitesdk\/scrolllayout\/livetext","abstract":[{"type":"text","text":"LiveText is a utility class to send small blocks of rapidly updating text to the glasses to be displayed at the bottom of the field of view."},{"text":" ","type":"text"},{"text":"This creates an effect similar to closed captioning on a televisiion.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This class efficiently updates the current line of text on the screen by adding new words to the"},{"type":"text","text":" "},{"type":"text","text":"end, and then scrolls the completed lines upwards to make room for new content below."}],"kind":"symbol","title":"ScrollLayout.LiveText","type":"topic","navigatorTitle":[{"text":"LiveText","kind":"identifier"}],"identifier":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText"},"doc://ultralitesdk.UltraliteSDK/documentation/UltraliteSDK":{"identifier":"doc:\/\/ultralitesdk.UltraliteSDK\/documentation\/UltraliteSDK","type":"topic","kind":"symbol","url":"\/documentation\/ultralitesdk","role":"collection","abstract":[{"text":"Use this SDK to easily send text and images to your Vuxix smart glasses.","type":"text"}],"title":"UltraliteSDK"}}}