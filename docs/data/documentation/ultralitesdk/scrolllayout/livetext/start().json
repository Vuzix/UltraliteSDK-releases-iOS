{"hierarchy":{"paths":[["doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText"]]},"metadata":{"modules":[{"name":"UltraliteSDK"}],"title":"start()","role":"symbol","externalID":"s:12UltraliteSDK12ScrollLayoutC8LiveTextC5startyyF","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"start"},{"kind":"text","text":"()"}]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText\/start()"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Starts the LiveText listening for text changes on the text property."},{"type":"text","text":" "},{"type":"text","text":"The caller must "},{"type":"codeVoice","code":"requestControl()"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"setLayout(Layout.SCROLL,...)"},{"text":" prior to calling this.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"start"},{"text":"()","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/ultralitesdk\/scrolllayout\/livetext\/start()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/LiveText":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LiveText"}],"kind":"symbol","type":"topic","title":"ScrollLayout.LiveText","role":"symbol","url":"\/documentation\/ultralitesdk\/scrolllayout\/livetext","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText","abstract":[{"type":"text","text":"LiveText is a utility class to send small blocks of rapidly updating text to the glasses to be displayed at the bottom of the field of view."},{"text":" ","type":"text"},{"type":"text","text":"This creates an effect similar to closed captioning on a televisiion."},{"type":"text","text":" "},{"text":"This class efficiently updates the current line of text on the screen by adding new words to the","type":"text"},{"type":"text","text":" "},{"text":"end, and then scrolls the completed lines upwards to make room for new content below.","type":"text"}],"navigatorTitle":[{"text":"LiveText","kind":"identifier"}]},"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/LiveText/start()":{"kind":"symbol","url":"\/documentation\/ultralitesdk\/scrolllayout\/livetext\/start()","title":"start()","type":"topic","abstract":[{"text":"Starts the LiveText listening for text changes on the text property.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The caller must "},{"type":"codeVoice","code":"requestControl()"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"setLayout(Layout.SCROLL,...)"},{"type":"text","text":" prior to calling this."}],"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/LiveText\/start()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ScrollLayout","kind":"identifier"}],"url":"\/documentation\/ultralitesdk\/scrolllayout","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","abstract":[{"text":"When Ultralite.requestControl with a .scroll layout type .. this is the class you interate with to draw scrolling text to the screen.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Once the layout is .scrolled you must send one configure message to tell the layout how to setup.  It will setup the slice height and how many slices are visible."},{"type":"text","text":" "},{"type":"text","text":"There are two supported modes: autoScroll on\/off"},{"text":" ","type":"text"},{"type":"text","text":"When autoScroll is true, the slices are automatically scrolled.  Subscribe to the delgate and listen for the scrolled callback, when you get it send another slice of text"},{"type":"text","text":" "},{"text":"When autoScroll is false, you can drive the slices and how they look on the screen.  You can send all the slices at once or send one at a time and animate it onto the screen at the current time.","type":"text"}],"role":"symbol","title":"ScrollLayout","kind":"symbol","navigatorTitle":[{"text":"ScrollLayout","kind":"identifier"}],"type":"topic"},"doc://UltraliteSDK/documentation/UltraliteSDK":{"type":"topic","title":"UltraliteSDK","kind":"symbol","abstract":[{"type":"text","text":"Use this SDK to easily send text and images to your Vuxix smart glasses."}],"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","url":"\/documentation\/ultralitesdk","role":"collection"}}}