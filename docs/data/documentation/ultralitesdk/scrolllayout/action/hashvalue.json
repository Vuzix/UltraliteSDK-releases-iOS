{"metadata":{"externalID":"s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:12UltraliteSDK12ScrollLayoutC6ActionO","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"symbolKind":"property","title":"hashValue","roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"role":"symbol","modules":[{"relatedModules":["Swift"],"name":"UltraliteSDK"}],"extendedModule":"Swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ultralitesdk\/scrolllayout\/action\/hashvalue"]}],"identifier":{"url":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/hashValue","interfaceLanguage":"swift"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"RawRepresentable.hashValue","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/RawRepresentable-Implementations"]]},"sections":[],"references":{"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action/RawRepresentable-Implementations":{"title":"RawRepresentable Implementations","abstract":[],"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/RawRepresentable-Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/ultralitesdk\/scrolllayout\/action\/rawrepresentable-implementations","type":"topic"},"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action/hashValue":{"kind":"symbol","title":"hashValue","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/hashValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/ultralitesdk\/scrolllayout\/action\/hashvalue"},"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout":{"kind":"symbol","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","type":"topic","navigatorTitle":[{"text":"ScrollLayout","kind":"identifier"}],"abstract":[{"text":"When Ultralite.requestControl with a .scroll layout type .. this is the class you interate with to draw scrolling text to the screen.","type":"text"},{"type":"text","text":" "},{"text":"Once the layout is .scrolled you must send one configure message to tell the layout how to setup.  It will setup the slice height and how many slices are visible.","type":"text"},{"text":" ","type":"text"},{"text":"There are two supported modes: autoScroll on\/off","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When autoScroll is true, the slices are automatically scrolled.  Subscribe to the delgate and listen for the scrolled callback, when you get it send another slice of text"},{"type":"text","text":" "},{"type":"text","text":"When autoScroll is false, you can drive the slices and how they look on the screen.  You can send all the slices at once or send one at a time and animate it onto the screen at the current time."}],"url":"\/documentation\/ultralitesdk\/scrolllayout","role":"symbol","title":"ScrollLayout","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ScrollLayout","kind":"identifier"}]},"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Action","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action","url":"\/documentation\/ultralitesdk\/scrolllayout\/action","abstract":[{"text":"Actions that can be used on a .scroll layout","type":"text"}],"title":"ScrollLayout.Action","role":"symbol","navigatorTitle":[{"text":"Action","kind":"identifier"}],"type":"topic"},"doc://UltraliteSDK/documentation/UltraliteSDK":{"url":"\/documentation\/ultralitesdk","type":"topic","kind":"symbol","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","title":"UltraliteSDK","abstract":[{"type":"text","text":"Use this SDK to easily send text and images to your Vuxix smart glasses."}],"role":"collection"}}}