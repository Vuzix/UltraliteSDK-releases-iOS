{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/ultralitesdk\/scrolllayout\/action\/hashvalue"]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"RawRepresentable.hashValue"},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/RawRepresentable-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/hashValue"},"metadata":{"role":"symbol","roleHeading":"Instance Property","externalID":"s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:12UltraliteSDK12ScrollLayoutC6ActionO","symbolKind":"property","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"UltraliteSDK"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hashValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"title":"hashValue","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"sections":[],"references":{"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action":{"kind":"symbol","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action","role":"symbol","type":"topic","abstract":[{"text":"Actions that can be used on a .scroll layout","type":"text"}],"title":"ScrollLayout.Action","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Action","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Action"}],"url":"\/documentation\/ultralitesdk\/scrolllayout\/action"},"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action/hashValue":{"type":"topic","title":"hashValue","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","role":"symbol","url":"\/documentation\/ultralitesdk\/scrolllayout\/action\/hashvalue","abstract":[],"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/hashValue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"hashValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}]},"doc://UltraliteSDK/documentation/UltraliteSDK":{"type":"topic","abstract":[{"type":"text","text":"Use this SDK to easily send text and images to your Vuxix smart glasses."}],"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","kind":"symbol","title":"UltraliteSDK","role":"collection","url":"\/documentation\/ultralitesdk"},"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action/RawRepresentable-Implementations":{"title":"RawRepresentable Implementations","kind":"article","url":"\/documentation\/ultralitesdk\/scrolllayout\/action\/rawrepresentable-implementations","type":"topic","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/RawRepresentable-Implementations"},"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout":{"abstract":[{"text":"When Ultralite.requestControl with a .scroll layout type .. this is the class you interate with to draw scrolling text to the screen.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Once the layout is .scrolled you must send one configure message to tell the layout how to setup.  It will setup the slice height and how many slices are visible."},{"type":"text","text":" "},{"type":"text","text":"There are two supported modes: autoScroll on\/off"},{"type":"text","text":" "},{"text":"When autoScroll is true, the slices are automatically scrolled.  Subscribe to the delgate and listen for the scrolled callback, when you get it send another slice of text","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When autoScroll is false, you can drive the slices and how they look on the screen.  You can send all the slices at once or send one at a time and animate it onto the screen at the current time."}],"url":"\/documentation\/ultralitesdk\/scrolllayout","kind":"symbol","title":"ScrollLayout","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ScrollLayout","kind":"identifier"}],"navigatorTitle":[{"text":"ScrollLayout","kind":"identifier"}],"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout"}}}