{"identifier":{"url":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/RawRepresentable-Implementations","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action"]]},"metadata":{"modules":[{"name":"UltraliteSDK"}],"roleHeading":"API Collection","role":"collectionGroup","title":"RawRepresentable Implementations"},"topicSections":[{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/hashValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/hash(into:)"],"generated":true}],"variants":[{"paths":["\/documentation\/ultralitesdk\/scrolllayout\/action\/rawrepresentable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","references":{"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action/hash(into:)":{"title":"hash(into:)","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/ultralitesdk\/scrolllayout\/action\/hash(into:)","kind":"symbol","type":"topic","abstract":[]},"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action/hashValue":{"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action\/hashValue","title":"hashValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/ultralitesdk\/scrolllayout\/action\/hashvalue","kind":"symbol","type":"topic","abstract":[]},"doc://UltraliteSDK/documentation/UltraliteSDK":{"abstract":[{"text":"Use this SDK to easily send text and images to your Vuxix smart glasses.","type":"text"}],"role":"collection","url":"\/documentation\/ultralitesdk","kind":"symbol","type":"topic","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","title":"UltraliteSDK"},"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout":{"url":"\/documentation\/ultralitesdk\/scrolllayout","type":"topic","title":"ScrollLayout","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout","abstract":[{"text":"When Ultralite.requestControl with a .scroll layout type .. this is the class you interate with to draw scrolling text to the screen.","type":"text"},{"text":" ","type":"text"},{"text":"Once the layout is .scrolled you must send one configure message to tell the layout how to setup.  It will setup the slice height and how many slices are visible.","type":"text"},{"type":"text","text":" "},{"text":"There are two supported modes: autoScroll on\/off","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When autoScroll is true, the slices are automatically scrolled.  Subscribe to the delgate and listen for the scrolled callback, when you get it send another slice of text"},{"type":"text","text":" "},{"type":"text","text":"When autoScroll is false, you can drive the slices and how they look on the screen.  You can send all the slices at once or send one at a time and animate it onto the screen at the current time."}],"navigatorTitle":[{"text":"ScrollLayout","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ScrollLayout"}],"kind":"symbol"},"doc://UltraliteSDK/documentation/UltraliteSDK/ScrollLayout/Action":{"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/ScrollLayout\/Action","kind":"symbol","url":"\/documentation\/ultralitesdk\/scrolllayout\/action","abstract":[{"type":"text","text":"Actions that can be used on a .scroll layout"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Action"}],"title":"ScrollLayout.Action","navigatorTitle":[{"text":"Action","kind":"identifier"}],"type":"topic","role":"symbol"}}}