{"sections":[],"metadata":{"role":"symbol","title":"commit(callback:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"commit","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"callback"},{"text":": (() -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"symbolKind":"method","modules":[{"name":"UltraliteSDK"}],"roleHeading":"Instance Method","externalID":"s:12UltraliteSDK6CanvasC6commit8callbackyyycSg_tF"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Canvas"]]},"abstract":[{"type":"text","text":"Commits any canvas changes to screen"}],"variants":[{"paths":["\/documentation\/ultralitesdk\/canvas\/commit(callback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Canvas\/commit(callback:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"commit","kind":"identifier"},{"kind":"text","text":"("},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": (() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")? = nil)","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"optional method that will be called when this commit has finished loading on the glasses.","type":"text"}],"type":"paragraph"}],"name":"callback"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"All canvas operations need to be committed before they will be reflected on the canvas. This"},{"type":"text","text":" "},{"text":"allows you to stage an entire screen with changes and display them all at once. This is done by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"calling commit().  Please note that uncommitted changes may be shown early in some situations,"},{"type":"text","text":" "},{"text":"so this should be called immediately after the last canvas element is sent to ensure predictable","type":"text"},{"text":" ","type":"text"},{"text":"results.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://UltraliteSDK/documentation/UltraliteSDK":{"abstract":[{"text":"Use this SDK to easily send text and images to your Vuxix smart glasses.","type":"text"}],"role":"collection","url":"\/documentation\/ultralitesdk","kind":"symbol","type":"topic","identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK","title":"UltraliteSDK"},"doc://UltraliteSDK/documentation/UltraliteSDK/Canvas/commit(callback:)":{"kind":"symbol","role":"symbol","url":"\/documentation\/ultralitesdk\/canvas\/commit(callback:)","title":"commit(callback:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"commit"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": (() -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Canvas\/commit(callback:)","abstract":[{"text":"Commits any canvas changes to screen","type":"text"}]},"doc://UltraliteSDK/documentation/UltraliteSDK/Canvas":{"identifier":"doc:\/\/UltraliteSDK\/documentation\/UltraliteSDK\/Canvas","kind":"symbol","url":"\/documentation\/ultralitesdk\/canvas","abstract":[{"text":"Canvas is used to perform direct drawing operations to the Ultralite display. Before this class","type":"text"},{"text":" ","type":"text"},{"text":"can be used, the Ultralite layout should be set to CANVAS. Otherwise the methods in this class","type":"text"},{"text":" ","type":"text"},{"text":"wonâ€™t do anything.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Canvas","kind":"identifier"}],"title":"Canvas","navigatorTitle":[{"text":"Canvas","kind":"identifier"}],"type":"topic","role":"symbol"}}}